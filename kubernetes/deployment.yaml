apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-deployment
  namespace: default

spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      securityContext:
        runAsUser: 999 
      initContainers:
      - command:
        - /bin/sh
        - -c
        - until nc -zv $DB_HOST $DB_PORT -w1; do echo 'waiting for db'; sleep 1; done
        env:
        - name: DB_HOST
          value: db-service.petclinic.svc.cluster.local
        - name: DB_PORT
          value: "3306"
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        name: wait-for-mysql
      containers:
      - name: petclinic
        image: miewone/petclinic:latest
        ports:
        - containerPort: 8080
        env:
        - name: MYSQL_URL
          valueFrom:
            secretKeyRef:
              name: petclinic-secret
              key: mysql_url
        livenessProbe:
          httpGet:
            path: /manage/health/liveness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /manage/health/readiness
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: log-volume
          mountPath: /workdir/server/log
      terminationGracePeriodSeconds: 30
      volumes:
      - name: log-volume
        hostPath:
          path: /logs
          type: Directory
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
